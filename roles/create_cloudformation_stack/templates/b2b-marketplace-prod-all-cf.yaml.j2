---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation to create S3 buckets with IAM users.'
Resources:
  S3CasmartBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: Private
      BucketName: {{ aws_s3_casmart_notification_bucket }}
      LifecycleConfiguration:
        Rules:
          - Id: RemoveOldObjectsRule
            Status: Enabled
            ExpirationInDays: 30
            NoncurrentVersionExpirationInDays: 30
          - Id: DeleteIncompleteMultipartUploadsRule
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
{% for tag in aws_resource_tags %}
        - Key: {{ tag.Key }}
          Value: '{{ tag.Value }}'
{% endfor %}
      VersioningConfiguration:
        Status: Enabled
  S3ConfigDBBackupBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: Private
      BucketName: {{ aws_s3_config_db_bucket }}
      LifecycleConfiguration:
        Rules:
          - Id: DeleteIncompleteMultipartUploadsRule
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
          - Id: RemoveOldObjectsRule
            Status: Enabled
            ExpirationInDays: 30
            NoncurrentVersionExpirationInDays: 30
      Tags:
{% for tag in aws_resource_tags %}
        - Key: {{ tag.Key }}
          Value: '{{ tag.Value }}'
{% endfor %}
      VersioningConfiguration:
        Status: Enabled
  S3LogStorageBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: Private
      BucketName: {{ aws_s3_log_bucket }}
      LifecycleConfiguration:
        Rules:
          - Id: RemoveOldObjectsRule
            Status: Enabled
            ExpirationInDays: 180
            NoncurrentVersionExpirationInDays: 180
          - Id: OldObjectsTransitionRule
            Status: Enabled
            Transitions:
              - TransitionInDays: 90
                StorageClass: GLACIER
          - Id: DeleteIncompleteMultipartUploadsRule
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
{% for tag in aws_resource_tags %}
        - Key: {{ tag.Key }}
          Value: '{{ tag.Value }}'
{% endfor %}
      VersioningConfiguration:
        Status: Enabled
  S3ThermoFisherBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: Private
      BucketName: {{ aws_s3_thermofisher_notification_bucket }}
      LifecycleConfiguration:
        Rules:
          - Id: RemoveOldObjectsRule
            Status: Enabled
            ExpirationInDays: 7
            NoncurrentVersionExpirationInDays: 7
          - Id: DeleteIncompleteMultipartUploadsRule
            Status: Enabled
            AbortIncompleteMultipartUpload:
              DaysAfterInitiation: 7
      Tags:
{% for tag in aws_resource_tags %}
        - Key: {{ tag.Key }}
          Value: '{{ tag.Value }}'
{% endfor %}
      VersioningConfiguration:
        Status: Enabled
  CasmartUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
{% for tag in aws_resource_tags %}
        - Key: {{ tag.Key }}
          Value: '{{ tag.Value }}'
{% endfor %}
      UserName: {{ aws_iam_casmart_users }}
  CasmartUserPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: {{ aws_iam_casmart_users }}-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowListingOfSpecificBucket
            Effect: Allow
            Action:
              - 's3:GetBucketLocation'
              - 's3:ListBucket'
            Resource:
              - !Sub 'arn:aws-cn:s3:::${S3CasmartBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3CasmartBucket}/*'
              - !Sub 'arn:aws-cn:s3:::${S3ThermoFisherBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3ThermoFisherBucket}/*'
          - Sid: AllowGetObjectOfSpecificBucket
            Effect: Allow
            Action:
              - 's3:GetObject'
            Resource:
              - !Sub 'arn:aws-cn:s3:::${S3ThermoFisherBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3ThermoFisherBucket}/*'
          - Sid: AllowPutObjectOfSpecificBucket
            Effect: Allow
            Action:
              - 's3:PutObject'
            Resource:
              - !Sub 'arn:aws-cn:s3:::${S3CasmartBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3CasmartBucket}/*'
      Users: [!Ref 'CasmartUser']
  CasmartUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref CasmartUser
  ThermoFisherUser:
    Type: AWS::IAM::User
    Properties:
      Tags:
{% for tag in aws_resource_tags %}
        - Key: {{ tag.Key }}
          Value: '{{ tag.Value }}'
{% endfor %}
      UserName: {{ aws_iam_thermofisher_users }}
  ThermoFisherUserPolicies:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: {{ aws_iam_thermofisher_users }}-policy
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowUserToSeeBucketListInTheConsole
            Effect: Allow
            Action:
              - 's3:ListAllMyBuckets'
              - 's3:GetBucketLocation'
            Resource: 'arn:aws-cn:s3:::*'
          - Sid: AllowListingOfSpecificBucket
            Effect: Allow
            Action:
              - 's3:GetBucketLocation'
              - 's3:ListBucket'
            Resource:
              - !Sub 'arn:aws-cn:s3:::${S3CasmartBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3CasmartBucket}/*'
              - !Sub 'arn:aws-cn:s3:::${S3ConfigDBBackupBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3ConfigDBBackupBucket}/*'
              - !Sub 'arn:aws-cn:s3:::${S3LogStorageBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3LogStorageBucket}/*'
              - !Sub 'arn:aws-cn:s3:::${S3ThermoFisherBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3ThermoFisherBucket}/*'
          - Sid: AllowGetObjectOfSpecificBucket
            Effect: Allow
            Action:
              - 's3:GetObject'
            Resource:
              - !Sub 'arn:aws-cn:s3:::${S3CasmartBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3CasmartBucket}/*'
          - Sid: AllowPutObjectOfSpecificBucket
            Effect: Allow
            Action:
              - 's3:PutObject'
            Resource:
              - !Sub 'arn:aws-cn:s3:::${S3ConfigDBBackupBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3ConfigDBBackupBucket}/*'
              - !Sub 'arn:aws-cn:s3:::${S3LogStorageBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3LogStorageBucket}/*'
              - !Sub 'arn:aws-cn:s3:::${S3ThermoFisherBucket}'
              - !Sub 'arn:aws-cn:s3:::${S3ThermoFisherBucket}/*'
      Users: [!Ref 'ThermoFisherUser']
  ThermoFisherUserKeys:
    Type: AWS::IAM::AccessKey
    Properties:
      UserName: !Ref ThermoFisherUser
Outputs:
  CasmartUser:
    Description: new Casmart user Name
    Value: !Ref CasmartUser
  CasmartAccessKey:
    Description: AWS Access Key of new Casmart user
    Value: !Ref CasmartUserKeys
  CasmartSecretKey:
    Description: AWS Secret Access Key of new Casmart user
    Value: !GetAtt [CasmartUserKeys, SecretAccessKey]
  ThermoFisherUser:
    Description: new ThermoFisher user Name
    Value: !Ref ThermoFisherUser
  ThermoFisherAccessKey:
    Description: AWS Access Key of new ThermoFisher user
    Value: !Ref ThermoFisherUserKeys
  ThermoFisherSecretKey:
    Description: AWS Secret Access Key of new ThermoFisher user
    Value: !GetAtt [ThermoFisherUserKeys, SecretAccessKey]